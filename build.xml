<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See harness/README in the NetBeans platform -->
<!-- for some information on what you could do (e.g. targets to override). -->
<!-- If you delete this file and reopen the project it will be recreated. -->
<project name="jflex.editor" default="netbeans" basedir="." xmlns:artifact="antlib:org.apache.maven.artifact.ant" >
    <description>Builds, tests, and runs the project org.netbeans.modules.jflex.lexer.</description>
    <import file="nbproject/build-impl.xml"/>
    <!-- JFlex handling (download and taskdef) -->
    <target name="prepare-jflex" depends="build-init">
        <echo>
            Checking the Jflex file
        </echo>
        <taskdef name="jflex"
                 classname="JFlex.anttask.JFlexTask"
                 classpath="${basedir}/external/JFlex.jar" onerror="fail"/>
    </target>
    <!-- JFLEX section - generating JFLEX lexer -->
    <target name="gen-jflex-lexer" depends="prepare-jflex">
        <jflex file="tools/JflexColoringLexer.flex" skel="tools/jflex_coloring.skeleton" destdir="src" nobak="true"/>
        <!--patching the lexer customisation-->
        <replace file="src/org/netbeans/modules/jflex/editor/lexer/JflexColoringLexer.java">
            <replacetoken>      yychar+= zzMarkedPosL-zzStartRead;&#xA;&#xA;</replacetoken>
            <replacevalue></replacevalue>
        </replace>
        <replace file="src/org/netbeans/modules/jflex/editor/lexer/JflexColoringLexer.java">
            <replacetoken><![CDATA[
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }]]></replacetoken>
            <replacevalue></replacevalue>
        </replace>
    </target>
    <target name="netbeans-extra" depends="build-init,gen-jflex-lexer">
        <echo>
            Netbeans Extra tasks
        </echo>
    </target>
    <path id="maven-ant-tasks.classpath" path="lib/maven-ant-tasks-2.1.3.jar" />
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="antlib:org.apache.maven.artifact.ant" classpathref="maven-ant-tasks.classpath" />

    <!-- define Maven coordinates -->
    <property name="build" value="build" />
    <property name="groupId" value="io.github.haidubogdan.netbeans.jflex.editor" />
    <property name="artifactId" value="nb-jflex-editor" />
    <property name="version" value="1.0.1" />
    <!-- defined maven snapshots and staging repository id and url -->
    <property name="ossrh-snapshots-repository-url"
              value="https://s01.oss.sonatype.org/content/repositories/snapshots/" />
    <property name="ossrh-staging-repository-url"
              value="https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/" />
    <!-- there server id in the Maven settings.xml -->
    <property name="ossrh-server-id" value="ossrh" />
    <property name="code-name-base" value="jflex-editor" />
    <property name="nbm-path" value="${build}/${artifactId}-${version}" />
<!--
    <target name="update-version-number">
        <replaceregexp file="pom.xml"
                       match="(^    &lt;version&gt;).+(&lt;/version&gt;)"
                       replace="\1${version}\2"
                       byline="true" />
        <replaceregexp file="manifest.mf"
                       match="(OpenIDE-Module-Specification-Version:[ ]*).+"
                       replace="\1${version}"
                       byline="true" />
    </target>-->

    <!-- Need close and release on https://oss.sonatype.org after the nbm is uploaded -->
    <target name="deploy" depends="clean,nbm" description="deploy release version to Maven repository">
        <move file="${build}/jflex-editor.nbm" toFile="${nbm-path}.nbm"/>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
            <arg value="-Durl=${ossrh-staging-repository-url}" />
            <arg value="-DrepositoryId=${ossrh-server-id}" />
            <arg value="-DpomFile=pom.xml" />
            <arg value="-Dfile=${nbm-path}.nbm" />
            <arg value="-Pgpg" />
        </artifact:mvn>
    </target>
</project>
